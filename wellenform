#!/bin/sh

#===============================================================================
# waveform
# wellenform
# Erstellen Sie eine Wellenform aus einer Audio- oder Videodatei und speichern Sie sie als PNG
#===============================================================================

# Abhängigkeiten:
# ffmpeg

#===============================================================================
# Verwendung von Skripten
#===============================================================================

usage()
{
# Wenn das Argument an die Funktion übergeben wird, echo es
[ -z "${1}" ] || echo "! ${1}"
# Hilfe anzeigen
echo "\
# Erstellen Sie eine Wellenform aus einer Audio- oder Videodatei und speichern Sie sie als PNG

$(basename "$0") -i eingang.(mp4|mkv|mov|m4v|webm|aac|m4a|wav|mp3) -o ausgang.png
-i eingang.(mp4|mkv|mov|m4v|aac|m4a|wav|mp3)
-o ausgang.png : optionales Argument # wenn die Option nicht bereitgestellt wird,
wird standardmäßig Eingabename-Wellenform-Datum-Uhrzeit verwendet"
exit 2
}


#===============================================================================
# Fehlermeldungen
#===============================================================================

INVALID_OPT_ERR='Ungültige Option:'
REQ_ARG_ERR='erfordert eine Argumentation'
WRONG_ARGS_ERR='falsche Anzahl von Argumenten an Skript übergeben'


#===============================================================================
# Überprüfen Sie die Anzahl der an das Skript übergebenen Argumente
#===============================================================================

[ $# -gt 0 ] || usage "${WRONG_ARGS_ERR}"


#===============================================================================
# getopts überprüft die an das Skript übergebenen Optionen
#===============================================================================

while getopts ':i:o:h' opt
do
  case ${opt} in
     i) infile="${OPTARG}";;
     o) outfile="${OPTARG}";;
     h) usage;;
     \?) usage "${INVALID_OPT_ERR} ${OPTARG}" 1>&2;;
     :) usage "${INVALID_OPT_ERR} ${OPTARG} ${REQ_ARG_ERR}" 1>&2;;
  esac
done
shift $((OPTIND-1))


#===============================================================================
# variablen
#===============================================================================

# variablen
infile_nopath="${infile##*/}"
infile_name="${infile_nopath%.*}"

# Standardwerte für Variablen, falls nicht definiert
outfile_default="${infile_name}-wellenform-$(date +"%Y-%m-%d-%H-%M-%S").png"


#===============================================================================
# Funktionen
#===============================================================================

# Wellenform funktion
wform () {
    ffmpeg \
    -hide_banner \
    -stats -v panic \
    -i "${infile}" \
    -filter_complex "aformat=channel_layouts=mono,showwavespic=s=1000x200" \
    -frames:v 1 \
     -f apng \
    "${outfile:=${outfile_default}}"
}

# Führen Sie die wform-Funktion aus
wform "${infile}"

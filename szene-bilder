#!/bin/sh

#===============================================================================
# scene-images
# szene-bilder
# Thumbnails von ffmpeg-Szenen
#===============================================================================

# Abhängigkeiten:
# ffmpeg

#===============================================================================
# Verwendung von Skripten
#===============================================================================

usage () {
# Wenn das Argument an die Funktion übergeben wird, echo es
[ -z "${1}" ] || echo "! ${1}"
# Hilfe anzeigen
echo "\
$(basename "$0") -i eingang -c datei schneiden

-i eingang.(mp4|mov|mkv|m4v)
-c datei schneiden"
exit 2
}


#===============================================================================
# Fehlermeldungen
#===============================================================================

INVALID_OPT_ERR='Ungültige Option:'
REQ_ARG_ERR='erfordert eine Argumentation'
WRONG_ARGS_ERR='falsche Anzahl von Argumenten an Skript übergeben'


#===============================================================================
# Überprüfen Sie die Anzahl der an das Skript übergebenen Argumente
#===============================================================================

[ $# -gt 0 ] || usage "${WRONG_ARGS_ERR}"


#===============================================================================
# getopts überprüft die an das Skript übergebenen Optionen
#===============================================================================

while getopts ':i:c:h' opt
do
  case ${opt} in
     i) input="${OPTARG}";;
     c) cutfile="${OPTARG}";;
     h) usage;;
     \?) usage "${INVALID_OPT_ERR} ${OPTARG}" 1>&2;;
     :) usage "${INVALID_OPT_ERR} ${OPTARG} ${REQ_ARG_ERR}" 1>&2;;
  esac
done
shift $((OPTIND-1))


#===============================================================================
# variablen
#===============================================================================

# Holen Sie sich den Namen der Eingabedatei
input_nopath="${input##*/}"
input_name="${input_nopath%.*}"

#===============================================================================
# ffmpeg-Bild extrahieren
#===============================================================================

extract () {
  output="${input_name}-[${seconds}].png"
  ffmpeg \
  -nostdin \
  -hide_banner \
  -stats -v panic \
  -ss "${seconds}" \
  -i "${input}" \
  -q:v 2 -f image2 \
  -vframes 1 \
  "${output}"
}


#===============================================================================
# Datei lesen und ffmpeg ausführen
#===============================================================================

count=1
while IFS= read -r seconds; do
   extract
done < "${cutfile}"
